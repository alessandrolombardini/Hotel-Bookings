categorical_features = ['meal',
                       'market_segment',
                       'distribution_channel',
                       'reserved_room_type',
                       'assigned_room_type',
                       'deposit_type',
                       'customer_type']

from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import OneHotEncoder

categorical_transformer = OneHotEncoder(handle_unknown='ignore')
preprocessor = ColumnTransformer([('categorical', categorical_transformer, categorical_features)])

from sklearn.linear_model import LogisticRegression
from sklearn.pipeline import Pipeline

model = Pipeline([('preprocessor', preprocessor),
                  ('classifier', LogisticRegression(solver="saga", random_state=42))]) 

- In particolare mi riferisco alle seguenti variabili:
    - meal
    - country
    - market_segment
    - distribution_channel
    - reserved_room_type
    - assigned_room_type
    - deposit_type
    - customer_type

meal_encoding = dict(zip(hbd.meal.unique(), range(1, len(hbd.meal.unique()))))
country_encoding = dict(zip(hbd.country.unique(), range(1, len(hbd.country.unique()))))
market_segment_encoding = dict(zip(hbd.market_segment.unique(), range(1, len(hbd.market_segment.unique()))))
distribution_channel_encoding = dict(zip(hbd.distribution_channel.unique(), range(1, len(hbd.distribution_channel.unique()))))
room_encoding = dict(zip(np.unique(np.concatenate((hbd.reserved_room_type,hbd.assigned_room_type))), range(1, len(np.unique(np.concatenate((hbd.reserved_room_type,hbd.assigned_room_type)))))))
customer_type_encoding = dict(zip(hbd.customer_type.unique(), range(1, len(hbd.customer_type.unique()))))
deposit_type_encoding = dict(zip(hbd.deposit_type.unique(), range(1, len(hbd.deposit_type.unique()))))

- Definisco una funzione che, passato un dataframe, mappa tutte le variabili citate

 def encoding_rows(df):
  df["meal"] = df["meal"].map(meal_encoding).fillna(0)
  df["country"] = df["country"].map(country_encoding).fillna(0)
  df["market_segment"] = df["market_segment"].map(market_segment_encoding).fillna(0)
  df["distribution_channel"] = df["distribution_channel"].map(distribution_channel_encoding).fillna(0)
  df["reserved_room_type"] = df["reserved_room_type"].map(room_encoding).fillna(0)
  df["assigned_room_type"] = df["assigned_room_type"].map(room_encoding).fillna(0)
  df["deposit_type"] = df["deposit_type"].map(deposit_type_encoding).fillna(0)
  df["customer_type"] = df["customer_type"].map(customer_type_encoding).fillna(0)

- Applico la conversione

encoding_rows(hbd)
